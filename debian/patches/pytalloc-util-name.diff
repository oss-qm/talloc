# Don't encode the multiarch name into the pytalloc-util library name

Index: b/buildtools/wafsamba/samba_python.py
===================================================================
--- a/buildtools/wafsamba/samba_python.py
+++ b/buildtools/wafsamba/samba_python.py
@@ -122,7 +122,13 @@ Build.BuildContext.SAMBA_PYTHON = SAMBA_
 
 
 def pyembed_libname(bld, name, extrapython=False):
-    return name + bld.env['PYTHON_SO_ABI_FLAG']
+    abi_flag = bld.env['PYTHON_SO_ABI_FLAG']
+    # do we really want the version encoded in the library name?
+    #if bld.env['IS_EXTRA_PYTHON'] and 'DEB_HOST_MULTIARCH' in os.environ:
+    #    abi_flag = abi_flag.replace('-%s' % os.environ['DEB_HOST_MULTIARCH'], '')
+    if bld.env['IS_EXTRA_PYTHON']:
+        abi_flag = '-py3'
+    return name + abi_flag
 
 Build.BuildContext.pyembed_libname = pyembed_libname
 
diff --git a/buildtools/wafsamba/wafsamba.py b/buildtools/wafsamba/wafsamba.py
index 4a47dbf..6e9ed5a 100644
--- a/buildtools/wafsamba/wafsamba.py
+++ b/buildtools/wafsamba/wafsamba.py
@@ -260,9 +260,9 @@ def SAMBA_LIBRARY(bld, libname, source,
         features += ' abi_check'
 
     if pyembed and bld.env['PYTHON_SO_ABI_FLAG']:
-        # For ABI checking, we don't care about the exact Python version.
-        # Replace the Python ABI tag (e.g. ".cpython-35m") by a generic ".py3"
-        abi_flag = bld.env['PYTHON_SO_ABI_FLAG']
+        # For ABI checking, match the patch in samba_python.py and undo the -py3 here
+        # back to the .py3 the ABI files are written to use
+        abi_flag = "-py3"
         replacement = '.py%s' % bld.env['PYTHON_VERSION'].split('.')[0]
         version_libname = libname.replace(abi_flag, replacement)
     else:
